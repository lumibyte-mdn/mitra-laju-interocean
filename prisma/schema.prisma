// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PortLocations {
  id                      String          @id @default(uuid())
  portName                String
  country                 String
  isActive                Boolean         @default(true)
  createdAt               DateTime        @default(now())
  updatedAt               DateTime?
  createdBy               String
  updatedBy               String?

  customerUnloading       CustomerUnloading[]
  customerLoading         CustomerLoading[]
}

model Vessels {
  id              String          @id @default(uuid())
  vesselName      String
  voyage          String
  etd             DateTime?
  cutOffDate      DateTime?
  isActive        Boolean         @default(true)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?
  createdBy       String
  updatedBy       String?
}

model Customer {
  id                          String          @id @default(uuid())
  customerCode                String        
  customerName                String
  npwpNumber                  String?
  isActive                    Boolean         @default(true)
  createdAt                   DateTime        @default(now())
  updatedAt                   DateTime?
  createdBy                   String
  updatedBy                   String?

  customerUnloading           CustomerUnloading[]
  customerLoading             CustomerLoading[]
}

model CustomerLoading {
  id              String          @id @default(uuid())
  portId          String
  port            PortLocations   @relation(fields: [portId], references: [id])
  customerId      String
  customer        Customer        @relation(fields: [customerId], references: [id])

  isActive                    Boolean         @default(true)
  createdAt                   DateTime        @default(now())
  updatedAt                   DateTime?
  createdBy                   String
  updatedBy                   String?
}

model CustomerUnloading {
  id              String          @id @default(uuid())
  portId          String
  port            PortLocations   @relation(fields: [portId], references: [id])
  customerId      String
  customer        Customer        @relation(fields: [customerId], references: [id])

  isActive                    Boolean         @default(true)
  createdAt                   DateTime        @default(now())
  updatedAt                   DateTime?
  createdBy                   String
  updatedBy                   String?
}